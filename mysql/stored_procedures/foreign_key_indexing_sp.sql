/* Stored procedure to find all foreign key that do not have index and create index on them. Consiering that foreign key is of this format: singular_parent_table_name_id, ex: product_id, order_id, customer_id etc. */
DELIMITER $$
CREATE PROCEDURE sp_database_name_create_indexing()
BEGIN

DECLARE done INT DEFAULT FALSE;

DECLARE db_name VARCHAR(255);

DECLARE table_name VARCHAR(255);

DECLARE col_name VARCHAR(255);

DECLARE cursor1 CURSOR FOR SELECT COLUMNS.TABLE_SCHEMA, COLUMNS.TABLE_NAME, COLUMNS.COLUMN_NAME
FROM `INFORMATION_SCHEMA`.`COLUMNS`
INNER JOIN INFORMATION_SCHEMA.TABLES ON (COLUMNS.TABLE_NAME = TABLES.TABLE_NAME
AND COLUMNS.TABLE_SCHEMA = TABLES.TABLE_SCHEMA) LEFT JOIN INFORMATION_SCHEMA.STATISTICS as STATISTICS on (COLUMNS.TABLE_NAME = STATISTICS.TABLE_NAME AND COLUMNS.TABLE_SCHEMA = STATISTICS.TABLE_SCHEMA AND COLUMNS.COLUMN_NAME = STATISTICS.COLUMN_NAME) WHERE COLUMNS.`TABLE_SCHEMA` = 'database_name' AND COLUMNS.COLUMN_NAME LIKE '%\_id%' AND TABLES.TABLE_TYPE = 'BASE TABLE' AND STATISTICS.INDEX_NAME IS NULL AND COLUMNS.DATA_TYPE LIKE '%int%';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

OPEN cursor1;

read_loop: LOOP

FETCH cursor1 INTO db_name,table_name, col_name ;

IF done THEN

LEAVE read_loop;

END IF;

SET @GetName = CONCAT('ALTER TABLE ', table_name, ' ADD INDEX ( `', col_name,'` )');

PREPARE stmt FROM @GetName;

EXECUTE stmt;

END LOOP;

CLOSE cursor1;

END$$

DELIMITER ;